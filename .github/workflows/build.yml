name: Build
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Generate API code
        run: |
          go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@v1.11.0
          go generate ./...
      - name: Run tests
        run: go test ./...
      - name: Build
        run: go build

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Generate API code
        run: |
          go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@v1.11.0
          go generate ./...
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Docker login
        run: echo "$DOCKER_PASS" | docker login ghcr.io --username "$DOCKER_USER" --password-stdin
        env:
          DOCKER_USER: ${{ github.repository_owner }}
          DOCKER_PASS: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          args: release --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}