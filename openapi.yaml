openapi: "3.0.0"
info:
  title: Noflake
  version: 1.0.0
  description: |
    The API documentation of noflake
  contact:
    name: GitHub
    url: https://github.com/FACT-Finder/noflake
    email: ff-dev@fact-finder.com
  license:
    name: "AGPL-3"
    url: "https://github.com/FACT-Finder/noflake/blob/main/LICENSE"
paths:
  /flakes:
    get:
      operationId: getFlakyTests
      summary: Get the list of known flaky tests
      parameters:
        - in: query
          name: lastNDays
          schema:
            type: integer
          default: 14
          description: Only consider test runs in the lastNDays days
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlakyTest"
        default:
          description: >-
            Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /test/{id}/fails:
    get:
      operationId: getFailedBuilds
      summary: Get the list of failed builds
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The test id
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestResults"
        default:
          description: >-
            Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /test/{test_id}/upload/{upload_id}:
    get:
      operationId: getTestResult
      summary: Get the result of a test run
      parameters:
        - in: path
          name: test_id
          schema:
            type: string
          required: true
          description: The test id
        - in: path
          name: upload_id
          schema:
            type: string
          required: true
          description: The upload id
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestResult"
        default:
          description: >-
            Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /report/{commit}:
    post:
      operationId: addReport
      summary: Upload a junit report
      parameters:
        - in: path
          name: commit
          schema:
            type: string
          required: true
          description: Commit SHA that corresponds to the sent junit reports
        - in: query
          name: url
          schema:
            type: string
            format: url
          required: false
          description: URL to the build of the junit reports
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                report:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "204":
          description: No Content
        default:
          description: >-
            Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
components:
  schemas:
    FlakyTest:
      type: object
      example: >-
        {
          "test": "mytest"
        }
      required:
        - id
        - name
        - success_count
        - fail_count
        - score
      properties:
        id:
          type: string
          description: The test id
        name:
          type: string
          description: The name of the test
        success_count:
          type: integer
          description: The number of failures
        fail_count:
          type: integer
          description: The number of successes
        score:
          type: number
          description: The flaky score of the test
    TestResults:
      type: object
      required:
        - test_id
        - name
        - results
      properties:
        test_id:
          type: string
          description: The test id
        name:
          type: string
          description: The test name
        results:
          type: array
          items:
            $ref: "#/components/schemas/TestResult"
          description: The results of the test
    TestResult:
      type: object
      required:
        - test_id
        - upload_id
        - name
        - commitSHA
        - date
        - success
      properties:
        test_id:
          type: string
          description: The test id
        upload_id:
          type: string
          description: The upload id
        name:
          type: string
          description: The name of the test
        commitSHA:
          type: string
          description: The commit sha of the failed build
        date:
          type: string
          description: The time of the failed build
        url:
          type: string
          description: The url of the failed build
        success:
          type: boolean
          description: Whether or not the test passed
        output:
          type: string
          description: The output of the test run
    ApiError:
      type: object
      required:
        - error
        - description
      properties:
        error:
          type: string
          example: Bad Request
        description:
          type: string
          example: "could not parse request: invalid json: EOF"
